@import url('https://fonts.googleapis.com/css2?family=Roboto:ital@0;1&display=swap'); /* Правило @import позволяет импортировать содержимое CSS-файла в текущую стилевую таблицу. В данном случае импортируется шрифт ROboto путём передачи url адреса в import */
/* */

body{ /* стилизация части страницы заключенной в теге <body> */
    font-family: 'Roboto', sans-serif; /* Элемент font-family устанавливает семейство шрифта, которое будет использоваться для оформления текста содержимого. Список шрифтов может включать одно или несколько названий, разделенных запятой. Если в имени шрифта содержатся пробелы, например, Trebuchet MS, оно должно заключаться в одинарные или двойные кавычки*/
    /* в данном случае задано 2 шрифта - первый это импортированный вначале файла Roboto, а второй стандартный sans-serif - рубленные шрифты, типичный представитель — Arial */
    font-size: 16px; /*Элемент ont-size определяет размер шрифта элемента. В данном случае он задан в размере 16 пикселей*/
    font-weight: 100; /* Элемент font-weight устанавливает насыщенность шрифта. */
    color: rgb(103, 84, 84); /* Элемент color задает цвет текста элемента. В данном случае цвет задан при помощи задания RGB параметров цвета*/
    background-color: #f1f1f1; /* Элемент background-color определяет цвет фона элемента. По умолчанию - прозрачный. В данном случае залан путём задания RGB параметров цвета при помощи шестнадцатиричной системы исчисления */
    margin-bottom: 10px; /* Элемент margin-bottom устанавливает величину отступа от нижнего края элемента. В данном случае задано в размере 10 пикселей. */
}

.container{  /* Стилизация для класса container */
    max-width: 1300px; /* Параметр max-width задает максимальное значение ширины элемента. В данном случае значение задано в пикселях - 1300 пикселей */
    margin: auto; /* Параметр margin Устанавливает величину отступа от каждого края элемента. Отступом является пространство от границы текущего элемента до внутренней границы его родительского элемента. Значение auto указывает, что размер отступов будет автоматически рассчитан браузером. */
}

.avatar{ /* Стилизация для класса avatar */
    width: 300px; /* Параметр  width Устанавливает ширину элемента. Ширина не включает толщину границ вокруг элемента, значение отступов и полей. В данном случае задана в размере 300 пикселей */
    border-radius: 25px; /* Параметр border-radius Устанавливает радиус скругления уголков рамки. Если рамка не задана, то скругление также происходит и с фоном. В данном случае радиус задан в 25 пикселей. */
    box-shadow: 10px 10px 30px rgba(0, 0, 0, 0.25); /* Параметр box-shadow добавляет тень к элементу. В данном случае заданы: смещение по горизонтали относительно элемента - 10 пикселей, смещение по вертикали относительно элемента - 10 пикселей, размытие в 30 пикселей, цвет - почти черный */
}
.header{ /* Стилизация для класса header */
    background-color: #f9e3c0;  /* параметр background-color устанавливает цвет фона элемента. В данном случае цвет задан - что-то бежевое */
    border-radius: 15px;  /* Параметр border-radius Устанавливает радиус скругления уголков рамки. Если рамка не задана, то скругление также происходит и с фоном что и есть в данном случае. В данном случае радиус задан в 15 пикселей. */
    padding: 10px 15px 25px 10px; /* Параметр padding Устанавливает значение полей вокруг содержимого элемента. Полем называется расстояние от внутреннего края рамки элемента до воображаемого прямоугольника, ограничивающего его содержимое. В данном случае задано: 10 пикселей - от верхнего края, 15 - от правого края, 25 - от нижнего, 10 - от ллевого краёв. */
    margin-bottom: 10px; /* Элемент margin-bottom устанавливает величину отступа от нижнего края элемента. В данном случае задано в размере 10 пикселей. */
    display: flex; /* Параметр display - это многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. Значение flex указывает на гибкость элемента - позволяет растягиваться и сжиматься элементу заполняя всё выделенное ему пространство*/
}

/* */
.header-text{ /* Стилизация для класса header-text */
    /* margin-left: 40px; */
    padding-left: 40px; /* Параметр padding-left - устанавливает значение поля от левого края содержимого элемента. В данном случае задано в размере 40 пикселей. */
}

/* Правило @media позволяет указать тип носителя, для которого будет применяться указанный стиль. */
@media (max-width:720px) { /* В данном случае правилу @media определена максимальная ширина экрана в 720 пикселей, следовательно когда ширина экрана будет больше 720 пикселей будет работать общие настройки (прописанные ранее), когда ширина экрана будет меньше 720 пикселей - будут действовать настройки, прописанные ниже. */
    .header{ /* В классе header параметр display примет значение block - элемент показывается как блочный*/
        display: block; /* следовательно он уже не будет гибким и не будет растягиваться и сжиматься при изменении ширины экрана */
    }
    .header-text{ /* В классе header-text параметр padding-left примет значение 0*/
        padding-left: 0px; /* Следовательно не будет отступа содержимого элемента от левого края элемента */
    }
}



.experience{ /* Стилизация для класса experience */
    background-color: #eaf7b1; /* установлен цвет фона как желтенький */
    border-radius: 15px; /* Установлен радиус скругления рамки элемента */
    padding: 10px 15px; /* Установлены отступы от верхнего и нижнего краёв - в 10 пикселей, от правого и левого краёв - в 15 пикселей*/
    margin-bottom: 10px; /* Установлено расстояние в 10 пикселей от нижней границы элемента до следуюещго элемента или до нижней границы родительского элемента. */
}
/* аналогично настроены стили для классов Education, Curses, langueges, hobby, элемента footer. В них разница только в цветах фонов  */
.Education{
    background-color: #b1f7e0;
    border-radius: 15px;
    padding: 10px 15px;
    margin-bottom: 10px;
}

.Curses{
    background-color: #b1ccf7;
    border-radius: 15px;
    padding: 10px 15px;
    margin-bottom: 10px;
}

/* */

.langueges{
    background-color: #d8b1f7;
    border-radius: 15px;
    padding: 10px 15px;
    margin-bottom: 10px;
}

.hobby{
    background-color: #c9c9c9fa;
    border-radius: 15px;
    padding: 10px 15px;
    margin-bottom: 10px;
}
footer{
    background-color: #f0967f;
    border-radius: 15px;
    padding: 10px 15px;
    margin-bottom: 10px;
}

.btn{ /* стилизация класса btn */
    background-color: #e7e5e2; /* задан цвет фона */
    padding: 10px 15px; /* заданы отступы (внутренние) */
    border-radius: 15px; /* задан радиус закругления границ */
    font-size: large; /* Задан размер шрифта как large - большой */
    cursor: pointer; /* задана форма курсора, когда он находится в пределах элемента. Pointer - соответсвует изображению кисти руки с вытянутым указательным пальцем */
    color: black; /* задан цвет шрифта  */
    border: 1px solid black; /* заданы границы в 1 пиксель шириной, сплошная линия, чёрного цвета */
    margin-bottom: 10px; /* Задан внешний отступ снизу в 10 пикселей */
}

a:hover{ /* псевдокласс hover определяет поведение элемента при наведении на него курсора. В данном случае, стилизуется курсор при наведении на ссылку (элемент а) */
    opacity: 0.6; /* параметр opacity определяет прозрачность элемента, значения от 0 до 1 */
    color: orange; /* задан цвет при наведении курсора на элемента */
}
 
a:active{ /* Псевдокласс :active определяет стиль для активной ссылки. Активной ссылка становится при нажатии на нее. */
    font-size: 1.5rem; /* задан размер грифта в полтора раза */
    color:#e93f3f /* задан цвет шрифта как красный */
}
/* */

/* a:visited{
    color: #b1f7e0;
} */


input:hover{ /* Стилизация элемента input при помощи псевдокласса hover - задание поведения элемента input при наведении на него курсора */
    opacity: 0.6; /* изменение прозрачности (параметр opacity) при наведении на н+элемент курсора с 1 на 0,6 - становиттся немного прозрачным */
    color: orange; /* изменение цвета текста элемента на оранжевый при наведении на него курсора */
}

input:active{ /* стилизация элемента input при помощи псевдокласса active - изменение состояния (стиля) элемента input при нажатии на него */
    font-size: 1.5rem; /* увеличение размера шрифта элемента в 1.5 раза при нажатии на него */
    color:#e93f3f /* изменение цвета шрифта элемента на красный при нажатии на него */
}

/* */
.table{ /* стилизация класса table */
    width: 100%; /* параметр устанавливающий ширину элемента - в данном случае 100% занимаемого простраства */
    border: 1px solid black;  /* задание границ - толщиной 1 пиксель, сплошными линиями, черного цвета */
}

.table td { /* Стилизация тега td (ячейка таблицы) находящегося в классе table */
    text-align: left; /* атрибут отвечает за выравнивание текста в пределах элемента. Значение left соответвует выравниванию по левому краю */
    border: 1px solid black; /* задание границ ячейчам - толщиной 1 пиксель, сплошными лониями черного цвета */
}


.table tr:nth-child(odd){ /* стилизация тега tr (строки таблицы) находящегося в классе table при помощи псевдо класса nth-child. Данный псевдокласс используется для добавления стиля к элементам на основе нумерации в дереве элементов. Параметр odd, переданный данному псевдокласса означает что стилизоваться будут все нечетные элементы.  */
    background: #ecd764; /* Задаеся цвет фона для всех нечетных строк таблицы table */
}
/* */
.table2{ /* стилизация класса table2 */
    width: 100%; /* параметр устанавливающий ширину элемента - в данном случае 100% занимаемого простраства */
} 

.table2 td { /* Стилизация тега td (ячейка таблицы) находящегося в классе table2 */
    text-align: left; /* выравнивание текста в ячейках таблицы table2 по левому краю */
    border: 1px solid black; /* задание границ ячейчам таблицы table2- толщиной 1 пиксель, сплошными лониями черного цвета */
}

.table2 tr:nth-child(even){ /* стилизация всех четных (параметр even псевдокласса nth-child) строк (тег tr) таблицы с классом table2 */
    background: #8ce3c6; /* Задаеся цвет фона для всех четных строк таблицы table2 */
}

ol { /* стилизация тега ol - нумерованный список */
    padding-left: 15px; /* параметр padding-left устанавливает отступ от левого края элемента до содержимого этого элемента. В данном случае он установлен в размере 15 пикселей */
}

ul { /* стилизация тега ul - маркированный список */
    padding-left: 15px; /* параметр padding-left устанавливает отступ от левого края элемента до содержимого этого элемента. В данном случае он установлен в размере 15 пикселей */
}


@media (max-width:405px) { /* правило изменения стилей при уменьшении ширины экрана до 405 пикселей и менее. */
    .experience{ /* Стилизация для класса experience при ширине экрана 405 и менее пикселей*/
        padding: 10px 10px; /* Установлены отступы от верхнего и нижнего краёв - в 10 пикселей, от правого и левого краёв - в 15 пикселей*/
        }
    .table{ /* стилизация класса table при ширине экрана 405 и менее пикселей*/
        font-size: 0.95rem;
        }   
}

@media (max-width:377px) { /* правило изменения стилей при уменьшении ширины экрана до 405 пикселей и менее. */
    .table{ /* стилизация класса table при ширине экрана 405 и менее пикселей*/
        font-size: 0.9rem;
        }   
}
@media (max-width:360px) { /* правило изменения стилей при уменьшении ширины экрана до 405 пикселей и менее. */
    .table{ /* стилизация класса table при ширине экрана 405 и менее пикселей*/
        font-size: 0.85rem;
        }
    .avatar{ /* Стилизация для класса avatar */
        box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.25);
    }        
}
@media (max-width:341px) { /* правило изменения стилей при уменьшении ширины экрана до 405 пикселей и менее. */
    .table{ /* стилизация класса table при ширине экрана 405 и менее пикселей*/
        font-size: 0.8rem;
        }  
    .avatar{ /* Стилизация для класса avatar */
        width: 250px; /* Параметр  width Устанавливает ширину элемента. Ширина не включает толщину границ вокруг элемента, значение отступов и полей. В данном случае задана в размере 300 пикселей */
        box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.25);
        } 
}